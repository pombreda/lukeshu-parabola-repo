# Maintainer: Luke Shumaker <lukeshu@sbcglobal.net>
# Contributor: Sven Schneider <archlinux.sandmann@googlemail.com>
# Contributor: bugix
# Contributor: Lubosz Sarnecki <lubosz at gmail>

pkgname=(
    openni
    openni-samples
    
    openni-mono
    openni-mono-samples

    openni-java
    openni-java-samples)
pkgver=20111116
pkgrel=1
arch=('i686' 'x86_64')
url="http://www.openni.org/"
license=('GPL')
makedepends=('git' 'doxygen' 'graphviz')
source=()
md5sums=()

_gitroot="git://github.com/OpenNI/OpenNI.git"
_gitname="openni"
_gitbranch="unstable"
#_gitbranch="master"

case "${CARCH}" in
'x86_64') _platform=x64;;
'i686')   _platform=x86;;
*)        _platform=UNSUPPORTED_ARCH;;
esac

build() {
  cd "${srcdir}"
  msg "Connecting to GIT server...."

  if [ -d ${_gitname} ] ; then
    cd ${_gitname} && git pull origin
    msg "The local files are updated."
  else
    git clone -b ${_gitbranch} ${_gitroot} ${_gitname}
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting make..."

  rm -rf "${srcdir}/${_gitname}-build"
  git clone "${srcdir}/${_gitname}" "${srcdir}/${_gitname}-build"
  cd "${srcdir}/${_gitname}-build"

  # BUILD
  chmod 755                    "Platform/Linux/CreateRedist/RedistMaker"
  sed -i 's/python /python2 /' "Platform/Linux/CreateRedist/RedistMaker"

  cd "Platform/Linux/Build"

  # Ammend the Makefile to have ...cleaner... definitions
  echo                                                           >> Makefile
  echo 'abs_core: $(ALL_MODULES) $(ALL_UTILS)'                   >> Makefile
  echo 'abs_core_samples: $(CORE_SAMPLES)'                       >> Makefile
  echo 'abs_java: $(ALL_JAVA_PROJS)'                             >> Makefile
  echo 'abs_java_samples: $(JAVA_SAMPLES)'                       >> Makefile
  echo 'abs_mono: $(ALL_MONO_PROJS)'                             >> Makefile  
  echo 'abs_mono_samples: $(MONO_SAMPLES) $(MONO_FORMS_SAMPLES)' >> Makefile
  
  make -j1 \
      abs_core abs_core_samples \
      abs_java abs_java_samples \
      abs_mono abs_mono_samples || return 1
}

package_openni() {
    pkgdesc="Open Natural Interface framework"
    depends=('libusb' 'freeglut')
    depends=('python' 'libusb' 'freeglut' 'java-environment' 'mono')
    install="openni.install"
}
package_openni-samples() {
    pkgdesc="OpenNI sample programs"
    depends=('openni')
}
package_openni-java() {
    pkgdesc="OpenNI java wrapper"
    depends=('openni')
}
package_openni-java-samples() {
    pkgdesc="OpenNI java wrapper sample programs"
    depends=('openni-java')
}
package_openni-mono() {
    pkgdesc="OpenNI mono wrapper"
    depends=('openni')
}
package_openni-mono-samples() {
    pkgdesc="OpenNI java wrapper sample programs"
    depends=('openni-mono')
}

package_old() {
  install -d -m755 "${pkgdir}/usr/"{lib,bin,include/ni/Linux-${_platform}}
  install -d -m755 "${pkgdir}/var/lib/ni"

  cd "${srcdir}/${_gitname}-build/Include"
  install *.h "${pkgdir}/usr/include/ni"
  install Linux-${_platform}/* "${pkgdir}/usr/include/ni/Linux-${_platform}"

  cd "${srcdir}/${_gitname}-build/Platform/Linux/Bin/${_platform}-Release"
  install niLicense niReg "${pkgdir}/usr/bin"

  install libnimCodecs.so libnimMockNodes.so libnimRecorder.so libOpenNI.so "${pkgdir}/usr/lib"
}
